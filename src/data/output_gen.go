// Code generated by "json-ice -type=Output"; DO NOT EDIT.

package data

import "github.com/moznion/go-json-ice/serializer"

func MarshalOutputAsJSON(s *Output) ([]byte, error) {
	buff := make([]byte, 1, 184)
	buff[0] = '{'
	buff = append(buff, "\"lat\":"...)
	buff = serializer.AppendSerializedString(buff, s.Lat)
	buff = append(buff, ',')
	buff = append(buff, "\"lon\":"...)
	buff = serializer.AppendSerializedString(buff, s.Lon)
	buff = append(buff, ',')
	buff = append(buff, "\"bat\":"...)
	buff = serializer.AppendSerializedInt(buff, int64(s.Bat))
	buff = append(buff, ',')
	buff = append(buff, "\"rs\":"...)
	buff = serializer.AppendSerializedInt(buff, int64(s.Rs))
	buff = append(buff, ',')
	buff = append(buff, "\"temp\":"...)
	buff = serializer.AppendSerializedString(buff, s.Temp)
	buff = append(buff, ',')
	buff = append(buff, "\"humi\":"...)
	buff = serializer.AppendSerializedString(buff, s.Humi)
	buff = append(buff, ',')
	buff = append(buff, "\"timestamp\":"...)
	buff = serializer.AppendSerializedInt(buff, int64(s.Timestamp))
	buff = append(buff, ',')
	if buff[len(buff)-1] == ',' {
		buff[len(buff)-1] = '}'
	} else {
		buff = append(buff, '}')
	}
	return buff, nil
}
